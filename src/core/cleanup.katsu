use: {
    "core.combinator"
    "core.sentinel"
    "core.sequence.assoc"
    "core.builtin.misc"
}

let: *cleanup-key* = (new-sentinel: "cleanup-key")

let: (m: Assoc) cleanup do: [
    (m at*: *cleanup-key*) if-not-null: [ call ]
]

let: cleanup-all-modules do: [
    mut: any-error = #f
    loaded-modules each-entry: \name module [
        try: [ module cleanup ] except: {
            (Condition, \c [
                any-error: #t
                # TODO: should go to stderr
                print: "Error while cleaning up " ~ name ~ ": " ~ c .condition ~ " - " ~ c .message
            ])
        }
    ]
    not any-error
]

let: ((module: Assoc) add-cleanup: cleanup) do: [
    module add: *cleanup-key* value: cleanup
]
