use: {
    "core.builtin.ffi"
    "core.ffi"
    "core.resource"
    "core.sequence"
    "core.sequence.string"
}

with-disposal: [
    # Load DLL:
    let: libc = (dlopen: "libc.so.6" flags: RTLD_LAZY) ^dispose

    # Prepare a libffi call interface for:
    #   int puts(const char*)
    let: &puts = new-CIFRef
    &puts prep-ffi-call: libc symbol: "puts" atypes: { &ffi_type_pointer } rtype: &ffi_type_sint

    let: s = "hello, world! -sent from my FFI"

    # Call 'puts' and decode the result.
    (&puts .args at: 0) foreign-write-foreign-at-offset: 0 value: s >c-string ^dispose
    let: result = (&puts ffi-call foreign-read-sint-at-offset: 0)
    assert: result = (s code-units length + 1)
]

(malloc: 1024) dispose-on-cleanup
