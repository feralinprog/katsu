use: {
    "core.builtin.misc"
    "core.dynamic-variable"
    "core.io"
    "core.io.linux.file"
    "core.io.stream"
}

with-io: [
    try: [
        %open: "file-does-not-exist" flags: O_RDONLY
    ] except: {
        IOError, \c [
            print: "got IO error: " ~ c .message
        ]
    }

    with-input-stream: (open-input: "test/files/file1.txt") do: [
        let: s = read-all byte-array>string
        print: s
    ]

    # Do it again, but with a ridiculously small group size for reading. Make sure each group
    # is incorporated correctly.
    with-input-stream: (open-input: "test/files/file1.txt") do: [
        let: s = (read-all/group: 1 like: *input-stream* get buffer-exemplar) byte-array>string
        print: s
    ]

    let: nl = " "
    nl unsafe-write-u8-at-offset: 16 value: 10

    print: "writing to stdout:"
    write-from: ("abcde" ~ nl) string>byte-array

    print: "writing to stderr:"
    with-output-stream*: *error-stream* get do: [
        write-from: ("fake-err" ~ nl) string>byte-array
    ]
]